"use strict";function wpbc_flextimeline_nav(_,e){jQuery(".wpbc_timeline_front_end").trigger("timeline_nav",[_,e]),jQuery("#"+_.html_client_id+" .flex_tl_prev,#"+_.html_client_id+" .flex_tl_next").remove(),jQuery("#"+_.html_client_id+" .flex_tl_title").html('<span class="glyphicon glyphicon-refresh wpbc_spin"></span> &nbsp Loading...'),( 'function' === typeof(jQuery(".popover_click.popover_bottom").popover))&&jQuery(".popover_click.popover_bottom").popover("hide"),jQuery.ajax({url:wpbc_ajaxurl,type:"POST",success:function(e,t){if("success"==t)return jQuery("#"+_.html_client_id+" .wpbc_timeline_ajax_replace").html(e),!0},error:function(e,t,_){window.status="Ajax Error! Status: "+t,alert("Ajax Error! Status: "+e.status+" "+e.statusText)},data:{action:"WPBC_FLEXTIMELINE_NAV",timeline_obj:_,nav_step:e,wpdev_active_locale:wpbc_active_locale,wpbc_nonce:document.getElementById("wpbc_nonce_"+_.html_client_id).value}})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
